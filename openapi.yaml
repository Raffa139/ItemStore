openapi: 3.0.0
info:
  title: Item store
  description: Item store api specification
  version: '1.0'

servers:
  - url: http://localhost:8080/itemstore
    description: Localhost

paths:
  /items:
    get:
      summary: Returns a list with all items
      parameters:
        - name: page
          in: query
          required: false
          description: The page number of which page to return
          schema:
            type: number
        - name: size
          in: query
          required: false
          description: The max. numbers of items to return
          schema:
            type: number
        - name: sort
          in: query
          required: false
          description: The ordering of the resulting list
          schema:
            type: string
          examples:
            zero:
              summary: By update date time descending
              value: 'updateDateTime,desc'
            one:
              summary: By value ascending
              value: 'value'
        - name: search
          in: query
          required: false
          description: Search by a specific value or tags
          schema:
            type: string
          examples:
            zero:
              summary: Items with value < 1000
              value: 'value<1000'
            one:
              summary: Items with value > 1000
              value: 'value>1000'
            two:
              summary: Items with value equal to 1000
              value: 'value:1000'
            three:
              summary: Items with specific tags
              value: 'tags:(XYZ;ABC)'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'

  /items/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Id'
    get:
      summary: Returns a single items by it's id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        '404':
          description: Not found. No item with given id exists.
    put:
      summary: Update value of item with given id
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                value:
                  $ref: '#/components/schemas/Value'
      responses:
        '200':
          description: OK
        '404':
          description: Not found. No item with given id exists.
        '409':
          description: Conflict. Occurs on concurrent access.

  /items/create:
    post:
      summary: Create a new item
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestItem'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/Id'

components:
  schemas:
    Id:
      type: number
      example: 1000

    Value:
      type: number
      example: 31415

    Tags:
      type: array
      items:
        type: string
        example: 'TAG'

    Item:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        value:
          $ref: '#/components/schemas/Value'
        tags:
          $ref: '#/components/schemas/Tags'
        creationDateTime:
          type: string
          example: 'asdf'
        updateDateTime:
          type: string
          example: 'asdf'

    RequestItem:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/Value'
        tags:
          $ref: '#/components/schemas/Tags'